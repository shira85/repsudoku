{"version":3,"sources":["pictures/welcome.gif","pictures/sound.mp3","pictures/title2.png","pictures/star.gif","pictures/crying.gif","pictures/good.gif","pictures/background.jpg","Components/Signup.js","Components/TimerAudio.js","Components/Sudoku.js","Components/Login.js","Components/HomePage.js","Components/Game.js","Components/TableGames.js","Components/Kids.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Signup","props","validUser","e","char","target","value","slice","length","index","indexOf","user","users","filter","element","name","setState","errorMsg","userName","validPassword","password","validConfirmPassword","state","confirmPassword","addUser","add","body","games","fetch","method","JSON","stringify","headers","then","res","json","data","console","log","className","style","backgroundColor","width","height","textAlign","src","require","onChange","this","borderRadius","maxLength","type","placeholder","color","to","id","onClick","disabled","Component","TimerAudio","playMusic","document","getElementById","play","pouseMusic","pause","count","hour","minuts","second","Math","floor","myInterval","setInterval","Sudoku","validInput","tempSudoku","charAt","parseInt","reset","selectLevel","level","rndRow","rndCol","clearBoard","buildSudoku","countHints","numOfHints","i","pow","newSudoku","random","sudoku","finish","hint","startNewGame","disabledFunc","timer","start","showTimer","arrayForRandomNum","indexI","indexJ","startI","startJ","nums","arrNums","arrRandom","j","push","clearMatrix","randomNumber","undefined","resetGame","listHints","row","col","finishGame","checkGame","success","alert","addGame","selectBackgroundColor","changeBackgroundColor","listColor","board1","board2","getHint","background","haveGames","marginLeft","marginBottom","map","onInput","showGames","Login","movePage","checkUser","fontSize","HomePage","top","Game","sort","a","b","time","win","TableGames","bestGame","reduce","min","game","top5","winner","minTime","sortUsers","mintime","overflowY","border","borderCollapse","imgSrc","Kids","createSudoku","disabledBtnEnd","chooseTable","randMatrix","myGame","tempGame","endGame","winGame","showFaild","backgroundImage","App","updateTime","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACjC,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACjC,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACjC,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACjC,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACjC,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KAErCF,UAAW,CACP,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACjC,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACjC,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACjC,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACjC,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACjC,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACjC,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACjC,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACjC,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KAGrCd,WAAY,CACR,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACjC,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACjC,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACjC,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACjC,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACjC,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACjC,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACjC,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACjC,CAAC,GAAI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","file":"static/js/main.5521fb75.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/welcome.6e6e0cd3.gif\";","module.exports = __webpack_public_path__ + \"static/media/sound.e175412e.mp3\";","module.exports = __webpack_public_path__ + \"static/media/title2.05d5cb19.png\";","module.exports = __webpack_public_path__ + \"static/media/star.5d67370e.gif\";","module.exports = __webpack_public_path__ + \"static/media/crying.08a83089.gif\";","module.exports = __webpack_public_path__ + \"static/media/good.87c4538b.gif\";","module.exports = __webpack_public_path__ + \"static/media/background.2497ca29.jpg\";","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default class Signup extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            userName: '',\r\n            password: '',\r\n            confirmPassword: '',\r\n            errorMsg: ''\r\n        }\r\n    }\r\n\r\n    //בדיקת תקינות של יוזר והאם פנוי\r\n    validUser = (e) => {\r\n        let char = e.target.value.slice(e.target.value.length - 1, e.target.value.length);\r\n        //שמירת אינדקס התו האחרון שהוקלד\r\n        let index = e.target.value.indexOf(char);\r\n        let user = this.props.users.filter((element => element.name === e.target.value));\r\n        // אם בשם המשתמש הוכנסה ספרה\r\n        if ((char > '0' && char < '9')) {\r\n            e.target.value = (e.target.value.slice(0, index));\r\n        }\r\n\r\n        //אם היוזר קיים במערכת\r\n        if (user.length > 0) {\r\n            this.setState({ errorMsg: 'Username not available' });\r\n            //מעדכנים את היוזר בסטייט שלא ישאר ערך מלא\r\n            this.setState({ userName: '' });\r\n        }\r\n        else if (e.target.value.length < 5) {\r\n            this.setState({ errorMsg: 'Username must be 5-8 letters' });\r\n            //כפתור התחברות הופך לפעיל רק כאשר היוזר פנוי\r\n            this.setState({ userName: '' });\r\n        }\r\n        else {\r\n            this.setState({ errorMsg: '' });\r\n            this.setState({ userName: e.target.value });\r\n        }\r\n    }\r\n\r\n    // בדיקת תקינות של סיסמה\r\n    validPassword = (e) => {\r\n        if (e.target.value.length < 5) {\r\n            this.setState({ errorMsg: 'password must be 5-8 characters' });\r\n            //כפתור התחברות הופך לפעיל רק כאשר היוזר פנוי\r\n            this.setState({ password: '' });\r\n        }\r\n        else {\r\n            this.setState({ errorMsg: '' });\r\n            this.setState({ password: e.target.value });\r\n\r\n        }\r\n    }\r\n\r\n    validConfirmPassword = (e) => {\r\n        if (e.target.value !== this.state.password) {\r\n            this.setState({ errorMsg: 'the confirm password must accord with the password' });\r\n            this.setState({ confirmPassword: '' })\r\n        }\r\n        else {\r\n            this.setState({ errorMsg: '' });\r\n            this.setState({ confirmPassword: e.target.value })\r\n\r\n        }\r\n    }\r\n\r\n    //פונקציה להוספת יוזר חדש\r\n    addUser = () => {\r\n        this.props.add(this.state.userName, this.state.password);\r\n        let body = { name: this.state.userName, password: this.state.password, games: [] }\r\n        fetch('/api/users', {\r\n            method: \"POST\", body: JSON.stringify(body), headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                // todo\r\n                console.log(data);\r\n            })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='container' style={{ backgroundColor: 'black', width: '100%', height: '700px', textAlign: 'center' }}>\r\n                <div className='row'>\r\n                    <div className='col-3'></div>\r\n                    <div className='col-6'>\r\n                        <div>\r\n                            <br />\r\n                            <img style={{ width: '70%', height: '80%' }} src={`${require(`../pictures/welcome.gif`)}`}></img>\r\n                            <br /><br />\r\n                            <input onChange={this.validUser} style={{ width: '100%', height: '40px', backgroundColor: 'Gainsboro', borderRadius: '10px' }} maxLength='8' type='text' placeholder='Enter User Name' />\r\n                            <br /><br />\r\n                            <input onChange={this.validPassword} style={{ width: '100%', height: '40px', backgroundColor: 'Gainsboro', borderRadius: '10px' }} maxLength='8' type='password' placeholder='Enter Password' />\r\n                            <br /><br />\r\n                            <input onChange={this.validConfirmPassword} style={{ width: '100%', height: '40px', backgroundColor: 'Gainsboro', borderRadius: '10px' }} maxLength='8' type='password' placeholder='Confirm Password' />\r\n                            <br /><br />\r\n                            <p style={{ color: 'red' }}>{this.state.errorMsg}</p><br />\r\n                            <Link to='/'><button id='btnSignUp' onClick={this.addUser} disabled={!(this.state.password && this.state.confirmPassword && this.state.userName) ? 'disabled' : ''} >Sign Up</button></Link>\r\n\r\n                        </div>\r\n                    </div>\r\n                    <div className='col-3'></div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class TimerAudio extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            count: 1,//this.props.count,\r\n            hour: 0,\r\n            minuts: 0,\r\n            second: 0,\r\n            play: false,\r\n\r\n        }\r\n\r\n    }\r\n    playMusic = () => {\r\n        let myMusic = document.getElementById('music');\r\n        myMusic.play();\r\n        this.setState({ play: false })\r\n    }\r\n    pouseMusic = () => {\r\n        let myMusic = document.getElementById('music');\r\n        myMusic.pause();\r\n        this.setState({ play: true })\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                <h2 style={{ color: 'white' }}>Time: {Math.floor(this.state.count / 60)}:{Math.floor(this.state.count % 60)}</h2>\r\n                <audio id='music'>\r\n                    <source src={`${require(`../pictures/sound.mp3`)}`} type='audio/mpeg' />\r\n                </audio>\r\n                <button className='btnAudio' onClick={this.pouseMusic} disabled={this.state.play}>mute</button>\r\n                <button className='btnAudio' onClick={this.playMusic} disabled={!this.state.play}>unMute</button>\r\n\r\n            </div>\r\n        )\r\n    }\r\n    componentDidMount() {\r\n        this.myInterval = setInterval(() => {\r\n            this.setState({\r\n                count: this.state.count + 1,\r\n            })\r\n            this.props.add(this.state.count)\r\n        }, 1000)\r\n        var myMusic = document.getElementById('music');\r\n        myMusic.play();\r\n    }\r\n\r\n}\r\n","import React, { Component } from 'react'\r\nimport TimerAudio from './TimerAudio.js';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default class Sudoku extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state =\r\n        {\r\n            sudoku: [\r\n                ['', '', '', '', '', '', '', '', ''],\r\n                ['', '', '', '', '', '', '', '', ''],\r\n                ['', '', '', '', '', '', '', '', ''],\r\n                ['', '', '', '', '', '', '', '', ''],\r\n                ['', '', '', '', '', '', '', '', ''],\r\n                ['', '', '', '', '', '', '', '', ''],\r\n                ['', '', '', '', '', '', '', '', ''],\r\n                ['', '', '', '', '', '', '', '', ''],\r\n                ['', '', '', '', '', '', '', '', ''],\r\n            ],\r\n            newSudoku: [\r\n                ['', '', '', '', '', '', '', '', ''],\r\n                ['', '', '', '', '', '', '', '', ''],\r\n                ['', '', '', '', '', '', '', '', ''],\r\n                ['', '', '', '', '', '', '', '', ''],\r\n                ['', '', '', '', '', '', '', '', ''],\r\n                ['', '', '', '', '', '', '', '', ''],\r\n                ['', '', '', '', '', '', '', '', ''],\r\n                ['', '', '', '', '', '', '', '', ''],\r\n                ['', '', '', '', '', '', '', '', ''],\r\n            ],\r\n            // לוח שעליו נבצע את כל השינויים- נכניס פתרונות, הלוח השני למקרה שנרצה להתחיל משחק מהתחלה\r\n            tempSudoku: [\r\n                ['', '', '', '', '', '', '', '', ''],\r\n                ['', '', '', '', '', '', '', '', ''],\r\n                ['', '', '', '', '', '', '', '', ''],\r\n                ['', '', '', '', '', '', '', '', ''],\r\n                ['', '', '', '', '', '', '', '', ''],\r\n                ['', '', '', '', '', '', '', '', ''],\r\n                ['', '', '', '', '', '', '', '', ''],\r\n                ['', '', '', '', '', '', '', '', ''],\r\n                ['', '', '', '', '', '', '', '', ''],\r\n            ],\r\n\r\n           \r\n            disabled: [\r\n                ['', '', '', '', '', '', '', '', ''],\r\n                ['', '', '', '', '', '', '', '', ''],\r\n                ['', '', '', '', '', '', '', '', ''],\r\n                ['', '', '', '', '', '', '', '', ''],\r\n                ['', '', '', '', '', '', '', '', ''],\r\n                ['', '', '', '', '', '', '', '', ''],\r\n                ['', '', '', '', '', '', '', '', ''],\r\n                ['', '', '', '', '', '', '', '', ''],\r\n                ['', '', '', '', '', '', '', '', ''],\r\n            ],\r\n\r\n            //   backgroundColor:this.props.backgroundColor, //default\r\n            listColor: [{ background: 'bisque', board1: 'seashell', board2: 'gainsboro' },\r\n            { background: 'lavender', board1: 'silver', board2: 'whitesmoke' },\r\n            { background: 'LightCyan', board1: 'floralwhite', board2: 'aliceblue' },\r\n            { background: 'Gainsboro', board1: 'ghostwhite', board2: 'lavender' }\r\n            ],\r\n\r\n            //הכפתור לאתחול משחק יהיה פעיל רק אם התחלנו לשחק\r\n            reset: false,\r\n            // כפתור לסיום משחק יהיה פעיל רק אם הלוח מלא\r\n            finish: false,\r\n            hint: false,\r\n            startNewGame: true,\r\n            //מערך שיכיל את הקואורדינטות של הרמזים למקרה שהמשתמש ירצה להתחיל לשחק מחדש\r\n            listHints: [],\r\n            // הגבלת רמזים לפי דרגת קושי\r\n            countHints: 0,\r\n            count: '',\r\n            timer: false,\r\n            haveGames: false,\r\n            numOfHints: 0,\r\n\r\n        }\r\n\r\n    }\r\n    //בדיקת תקינות הזנת מספרים ללוח\r\n    validInput = (e) => {\r\n        //לא ניתן להקליד 0\r\n        if (e.target.value === '0') {\r\n            e.target.value = (e.target.value.slice(0, 0));\r\n        }\r\n        //מספר חד ספרתי\r\n        if (e.target.value.length > 1) {\r\n            e.target.value = (e.target.value.slice(0, 0));\r\n        }\r\n        else {\r\n\r\n            document.getElementById(`${e.target.id}`).value = e.target.value;\r\n            document.getElementById(`${e.target.id}`).style.color = \"blue\";\r\n            // הערך מהלוח נכנס לסודוקו הזמני\r\n            this.state.tempSudoku[e.target.id.charAt(1)][e.target.id.charAt(2)] = parseInt(e.target.value);\r\n\r\n            //כפתורים יהיו פעילים רק כאשר נתחיל משחק\r\n            this.setState({ reset: true })\r\n        }\r\n    }\r\n    selectLevel = (e) => {\r\n        this.clearBoard();\r\n        this.buildSudoku();\r\n        let level, rndRow, rndCol;\r\n        if (e.target.value === \"hard\") {\r\n            level = 0.25;\r\n            this.setState({ countHints: 10, numOfHints: 10 })\r\n        }\r\n        else if (e.target.value === \"medium\") {\r\n            level = 0.5;\r\n            this.setState({ countHints: 5, numOfHints: 5 })\r\n        }\r\n        else {\r\n            level = 0.75;\r\n            this.setState({ countHints: 2, numOfHints: 2 })\r\n            //level=0.98\r\n        }\r\n        for (let i = 0; i < Math.pow(this.state.newSudoku.length, 2) * level; i++) {\r\n            rndRow = Math.floor(Math.random() * (this.state.newSudoku.length));\r\n            rndCol = Math.floor(Math.random() * (this.state.newSudoku.length));\r\n            if (this.state.newSudoku[rndRow][rndCol] === '') {\r\n                this.state.newSudoku[rndRow][rndCol] = this.state.sudoku[rndRow][rndCol];\r\n\r\n            }\r\n            else {\r\n                //* if cell not empty, repeat loop from previous i\r\n                i--;\r\n            }\r\n        }\r\n        this.setState({ newSudoku: [...this.state.newSudoku] })\r\n        // כפתור לסיום משחק יהיה פעיל\r\n        this.setState({ finish: true });\r\n        this.setState({ hint: true });\r\n        this.setState({ startNewGame: false });\r\n        this.disabledFunc();\r\n        this.setState({ timer: true })\r\n    }\r\n\r\n    start = (count) => {\r\n        this.setState({ count: count })\r\n    }\r\n    showTimer = () => {\r\n        if (this.state.timer) {\r\n            return (\r\n                <TimerAudio add={this.start} />\r\n            )\r\n        }\r\n    }\r\n    // הפונקציה מקבלת אינדקסים ומחזירה מערך שרק ממנו ניתן להגריל מספרים\r\n    arrayForRandomNum = (indexI, indexJ) => {\r\n        let nums = [0, 0, 0, 0, 0, 0, 0, 0, 0];\r\n        let startI, startJ;\r\n        var arrNums = [], arrRandom = [];\r\n        if (this.state.sudoku[indexI][indexJ] === '') {\r\n            if (indexI >= 0 && indexI < 3 && indexJ >= 0 && indexJ < 3) {\r\n                startI = 0;\r\n                startJ = 0;\r\n            }\r\n            else if (indexI >= 0 && indexI < 3 && indexJ >= 3 && indexJ < 6) {\r\n                startI = 0;\r\n                startJ = 3;\r\n            }\r\n            else if (indexI >= 0 && indexI < 3 && indexJ >= 6 && indexJ < 9) {\r\n                startI = 0;\r\n                startJ = 6;\r\n            }\r\n            else if (indexI >= 3 && indexI < 6 && indexJ >= 0 && indexJ < 3) {\r\n                startI = 3;\r\n                startJ = 0;\r\n            }\r\n\r\n            else if (indexI >= 3 && indexI < 6 && indexJ >= 3 && indexJ < 6) {\r\n                startI = 3;\r\n                startJ = 3;\r\n            }\r\n\r\n            else if (indexI >= 3 && indexI < 6 && indexJ >= 6 && indexJ < 9) {\r\n                startI = 3;\r\n                startJ = 6;\r\n            }\r\n\r\n            else if (indexI >= 6 && indexI < 9 && indexJ >= 0 && indexJ < 3) {\r\n                startI = 6;\r\n                startJ = 0;\r\n            }\r\n\r\n            else if (indexI >= 6 && indexI < 9 && indexJ >= 3 && indexJ < 6) {\r\n                startI = 6;\r\n                startJ = 3;\r\n            }\r\n\r\n            else {\r\n                startI = 6;\r\n                startJ = 6;\r\n            }\r\n        }\r\n\r\n        // בדיקה אילו מספרים ניתן להגריל לתת מטריצה\r\n        for (let i = startI; i < startI + 3; i++) {\r\n            for (let j = startJ; j < startJ + 3; j++) {\r\n                if (this.state.sudoku[i][j] !== '')\r\n                    arrNums.push(this.state.sudoku[i][j]);\r\n            }\r\n        }\r\n\r\n        //בדיקה אילו מספרים ניתן להגריל לעמודה ושורה\r\n        for (let i = 0; i < this.state.sudoku.length; i++) {\r\n            if (this.state.sudoku[i][indexJ] !== '')\r\n                arrNums.push(this.state.sudoku[i][indexJ]);\r\n            if (this.state.sudoku[indexI][i] !== '')\r\n                arrNums.push(this.state.sudoku[indexI][i]);\r\n        }\r\n\r\n        for (let i = 0; i < arrNums.length; i++) {\r\n            nums[arrNums[i] - 1] = arrNums[i];\r\n        }\r\n        //מערך שמכיל את המספרים האפשריים עבור התא בסודוקו\r\n        for (let i = 0; i < nums.length; i++) {\r\n            if (nums[i] === 0) {\r\n                arrRandom.push(i + 1)\r\n            }\r\n        }\r\n        return arrRandom;\r\n    }\r\n    //לפני משחק חדש צריך \"לנקות את כל המערכים\"\r\n    clearMatrix = () => {\r\n        //debugger\r\n        for (let i = 0; i < 9; i++) {\r\n            this.state.sudoku[i] = ['', '', '', '', '', '', '', '', ''];\r\n            this.state.newSudoku[i] = ['', '', '', '', '', '', '', '', ''];\r\n            this.state.tempSudoku[i] = ['', '', '', '', '', '', '', '', ''];\r\n            this.state.disabled[i] = ['', '', '', '', '', '', '', '', ''];\r\n           // this.state.tempMatForSubMat[i] = [0, 0, 0, 0, 0, 0, 0, 0, 0];\r\n           // this.state.tempMatForRows[i] = [0, 0, 0, 0, 0, 0, 0, 0, 0];\r\n            //this.state.tempMatForCols[i] = [0, 0, 0, 0, 0, 0, 0, 0, 0];\r\n        }\r\n        this.setState({ sudoku: [this.state.sudoku] })\r\n    }\r\n   /* buildSudoku = () => {\r\n        this.clearMatrix();\r\n        for (let i = 0; i < this.state.sudoku.length; i++) {\r\n            let nums = [];\r\n            var listOfCols = [];\r\n            var listOfRows = [];\r\n            var listOfSub = [];\r\n            let randomNumber;\r\n            var subMatrixIndex;\r\n            let randomIndex;\r\n            for (let j = 0; j < this.state.sudoku[i].length; j++) {\r\n                console.log(i, j);\r\n                // אינדקס רנדומלי מתוך המערך\r\n                nums = this.arrayForRandomNum(i, j);\r\n                randomIndex = Math.floor(Math.random() * nums.length);\r\n                randomNumber = nums[randomIndex];\r\n\r\n                if (i >= 0 && i < 3 && j >= 0 && j < 3) {\r\n                    subMatrixIndex = 0;\r\n                }\r\n                else if (i >= 0 && i < 3 && j >= 3 && j < 6) {\r\n                    subMatrixIndex = 1;\r\n                }\r\n                else if (i >= 0 && i < 3 && j >= 6 && j < 9) {\r\n                    subMatrixIndex = 2;\r\n                }\r\n                else if (i >= 3 && i < 6 && j >= 0 && j < 3) {\r\n                    subMatrixIndex = 3;\r\n                }\r\n                else if (i >= 3 && i < 6 && j >= 3 && j < 6) {\r\n                    subMatrixIndex = 4;\r\n                }\r\n                else if (i >= 3 && i < 6 && j >= 6 && j < 9) {\r\n                    subMatrixIndex = 5;\r\n                }\r\n                else if (i >= 6 && i < 9 && j >= 0 && j < 3) {\r\n                    subMatrixIndex = 6;\r\n                }\r\n                else if (i >= 6 && i < 9 && j >= 3 && j < 6) {\r\n                    subMatrixIndex = 7;\r\n                }\r\n                else if (i >= 6 && i < 9 && j >= 6 && j < 9) {\r\n                    subMatrixIndex = 8;\r\n                }\r\n\r\n\r\n                if (this.state.tempMatForRows[i][randomNumber - 1] === 0 &&\r\n                    this.state.tempMatForCols[j][randomNumber - 1] === 0 &&\r\n                    this.state.tempMatForSubMat[subMatrixIndex][randomNumber - 1] === 0 &&\r\n                    this.state.sudoku[i][j] === '') {\r\n\r\n                    //* The location of the random number in the sudoku matrix\r\n                    this.state.sudoku[i][j] = randomNumber;\r\n\r\n                    this.state.tempMatForRows[i][randomNumber - 1] = 1;\r\n                    listOfRows.push({ x: i, y: randomNumber - 1 });\r\n\r\n                    //* Changing the value in the auxiliary col-matrix\r\n                    this.state.tempMatForCols[j][randomNumber - 1] = 1;\r\n                    listOfCols.push({ x: j, y: randomNumber - 1 });\r\n\r\n\r\n                    //* Changing the value in the auxiliary sub-matrix\r\n                    this.state.tempMatForSubMat[subMatrixIndex][randomNumber - 1] = 1;\r\n                    listOfSub.push({ x: subMatrixIndex, y: randomNumber - 1 });\r\n\r\n                }\r\n                else {\r\n                    //*Clearing the sudoku in the [i] row in the auxiliary row-matrix\r\n                    this.state.sudoku[i] = ['', '', '', '', '', '', '', '', ''];\r\n\r\n                    //* Creating a loop for assembling assiting-arrays for clearing the auxiliary col and sub matrix\r\n                    //* x is a varriable asisting in getting the coordinates of the numbers to be removed form tempMatForCols and tempMatForSubMat\r\n\r\n                    for (let x = 0; x < listOfCols.length; x++) {\r\n                        this.state.tempMatForRows[listOfRows[x].x][listOfRows[x].y] = 0;\r\n                        this.state.tempMatForCols[listOfCols[x].x][listOfCols[x].y] = 0;\r\n                        this.state.tempMatForSubMat[listOfSub[x].x][listOfSub[x].y] = 0;\r\n                    }\r\n                    if (i > 0) {\r\n                        i = i - 1;\r\n                        break;\r\n                    }\r\n                    break;\r\n                }\r\n\r\n            }\r\n            this.setState({ sudoku: [...this.state.sudoku] });\r\n\r\n        }\r\n    }*/\r\n\r\n    buildSudoku = () => {\r\n        this.clearMatrix();\r\n        let nums=[];\r\n        let randomNumber;\r\n        let randomIndex;\r\n        for (let i = 0; i < this.state.sudoku.length; i++) {\r\n            for (let j = 0; j < this.state.sudoku[i].length; j++) {\r\n        \r\n                // אינדקס רנדומלי מתוך המערך\r\n                nums = this.arrayForRandomNum(i, j);\r\n                randomIndex = Math.floor(Math.random() * nums.length);\r\n                randomNumber = nums[randomIndex];\r\n\r\n                if(randomNumber===undefined){\r\n                   this.state.sudoku[i]=['','','','','','','','',''];\r\n                    i--;\r\n                    break;\r\n                }\r\n\r\n                this.state.sudoku[i][j] = randomNumber;\r\n                }\r\n            }\r\n            this.setState({ sudoku: [...this.state.sudoku] });\r\n    }\r\n    disabledFunc = () => {\r\n        for (let i = 0; i < this.state.tempSudoku.length; i++) {\r\n            for (let j = 0; j < this.state.tempSudoku.length; j++) {\r\n                if (this.state.newSudoku[i][j] !== '') {\r\n                    this.state.disabled[i][j] = true;\r\n                }\r\n                else {\r\n                    this.state.disabled[i][j] = false;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    //פןנקציה \"מנקה\" את הממשק\r\n    clearBoard = () => {\r\n        for (let i = 0; i < this.state.tempSudoku.length; i++) {\r\n            for (let j = 0; j < this.state.tempSudoku.length; j++) {\r\n                document.getElementById(`t${i}${j}`).value = '';\r\n            }\r\n        }\r\n    }\r\n    resetGame = () => {\r\n        this.setState({ reset: false })\r\n        for (let i = 0; i < this.state.tempSudoku.length; i++) {\r\n            for (let j = 0; j < this.state.tempSudoku.length; j++) {\r\n                if (this.state.tempSudoku[i][j] !== '') {\r\n                    this.state.tempSudoku[i][j] = '';\r\n                    document.getElementById(`t${i}${j}`).value = '';\r\n                }\r\n            }\r\n        }\r\n        for (let i = 0; i < this.state.listHints.length; i++) {\r\n            document.getElementById(`t${this.state.listHints[i].row}${this.state.listHints[i].col}`).disabled = false;\r\n        }\r\n        this.setState({ hint: true });\r\n        // מספר הרמזים חוזר להיות לפי בחירת הרמה\r\n        this.setState({ numOfHints: this.state.countHints })\r\n    }\r\n    finishGame = () => {\r\n\r\n        let checkGame = [[], [], [], [], [], [], [], [], []];\r\n        let success = true;\r\n        for (let i = 0; i < this.state.sudoku.length; i++) {\r\n            for (let j = 0; j < this.state.sudoku[i].length; j++) {\r\n                if (this.state.newSudoku[i][j] === '') {\r\n                    checkGame[i][j] = this.state.tempSudoku[i][j];\r\n                }\r\n                else {\r\n                    checkGame[i][j] = this.state.newSudoku[i][j];\r\n                }\r\n            }\r\n        }\r\n        for (let i = 0; i < this.state.sudoku.length; i++) {\r\n            for (let j = 0; j < this.state.sudoku.length; j++) {\r\n                if (this.state.sudoku[i][j] === '') {\r\n                    success = false;\r\n                }\r\n            }\r\n        }\r\n\r\n        for (let i = 0; i < this.state.sudoku.length; i++) {\r\n            for (let j = 0; j < this.state.sudoku.length; j++) {\r\n                if (this.state.sudoku[i][j] !== checkGame[i][j]) {\r\n                    success = false;\r\n                }\r\n            }\r\n        }\r\n        // רק כשאר סיימנו לשחק אפשר לבחור משחק חדש\r\n        this.setState({ startNewGame: false })\r\n        this.setState({ timer: false })\r\n        if (success) {\r\n            alert('Good');\r\n            //  אם ניצח את המשחק התוצאה נשמרת במאגר המשחקים של המשתמש\r\n            this.props.addGame(this.props.index, success, this.state.count/*, this.state.sudoku*/)\r\n        }\r\n        else {\r\n            alert('Try again');\r\n            this.props.addGame(this.props.index, success, 1000000/*, this.state.sudoku*/)\r\n        }\r\n\r\n    }\r\n    //שינוי צבע רקע\r\n    selectBackgroundColor = (e) => {\r\n        this.props.changeBackgroundColor(e.target.value, this.state.listColor[e.target.id].board1, this.state.listColor[e.target.id].board2)\r\n    }\r\n    //קבלת רמז\r\n    getHint = () => {\r\n        let rndRow = Math.floor(Math.random() * (this.state.newSudoku.length));\r\n        let rndCol = Math.floor(Math.random() * (this.state.newSudoku.length));\r\n\r\n        //* if the cell containes a valvue, repeat function getHint()\r\n        if (document.getElementById(`t${rndRow}${rndCol}`).value !== '') {\r\n            this.getHint();\r\n        }\r\n        else {\r\n            this.state.listHints.push({ row: rndRow, col: rndCol })\r\n            //* if cell is empty, fill html field with number, disable cell, and make font color red\r\n            this.state.tempSudoku[rndRow][rndCol] = this.state.sudoku[rndRow][rndCol];\r\n            document.getElementById(`t${rndRow}${rndCol}`).value = this.state.sudoku[rndRow][rndCol];\r\n            document.getElementById(`t${rndRow}${rndCol}`).disabled = true;\r\n            document.getElementById(`t${rndRow}${rndCol}`).style.color = \"red\";\r\n        }\r\n        this.setState({ numOfHints: this.state.numOfHints - 1 })\r\n        //this.setState({numOfHints:'you have '+this.state.countHint+' hints'})\r\n        if (this.state.numOfHints === 1) {\r\n            this.setState({ hint: false })\r\n        }\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className='container' style={{ backgroundColor: this.props.backgroundColor }}>\r\n                <div className='row'>\r\n                    <div className='col-1'>\r\n                        {this.showTimer()}\r\n                    </div>\r\n\r\n                    <div className='col-9'>\r\n                        <img style={{ width: '50%', marginLeft: '30%', marginBottom: '20px' }} src={`${require(`../pictures/title2.png`)}`}></img>\r\n                        <div id='divDifficulty' >\r\n                            <button className='btnDifficulty' onClick={this.selectLevel} value='easy' style={{ backgroundColor: 'red' }} disabled={!this.state.startNewGame}>easy</button>\r\n                            <button className='btnDifficulty' onClick={this.selectLevel} value='medium' style={{ backgroundColor: 'green' }} disabled={!this.state.startNewGame}>medium</button>\r\n                            <button className='btnDifficulty' onClick={this.selectLevel} value='hard' style={{ backgroundColor: 'blue' }} disabled={!this.state.startNewGame}>hard</button>\r\n                        </div>\r\n\r\n                        <table id='tblBoard' >\r\n                            {this.state.newSudoku.map((e, i) => {\r\n                                return (\r\n                                    <tr>\r\n                                        {this.state.newSudoku[i].map((e, j) => {\r\n                                            if ((i >= 0 && i < 3 && j >= 0 && j < 3) || (i >= 0 && i < 3 && j >= 6 && j < 9) || (i >= 3 && i < 6 && j >= 3 && j < 6) || (i >= 6 && i < 9 && j >= 0 && j < 3) || (i >= 6 && i < 9 && j >= 6 && j < 9))\r\n                                                return (\r\n                                                    <td><input style={{ backgroundColor: this.props.board1 }} onInput={this.validInput} disabled={this.state.disabled[i][j]} className='inptNumber' type=\"number\" value={this.state.newSudoku[i][j] !== '' ? this.state.newSudoku[i][j] : null} id={`t${i}${j}`} /></td>\r\n                                                )\r\n                                            else\r\n                                                return (\r\n                                                    <td><input style={{ backgroundColor: this.props.board2 }} onInput={this.validInput} disabled={this.state.disabled[i][j]} className='inptNumber' type=\"number\" value={this.state.newSudoku[i][j] !== '' ? this.state.newSudoku[i][j] : null} id={`t${i}${j}`} /></td>\r\n                                                )\r\n                                        })}\r\n                                    </tr>)\r\n                            })}\r\n                        </table>\r\n                        <div >\r\n                            <br />\r\n                            <button className='btnRestartFinishHint' onClick={this.resetGame} disabled={!this.state.reset} style={{ backgroundColor: 'yellow' }}>Reset</button>\r\n                            <button className='btnRestartFinishHint' onClick={this.finishGame} disabled={!this.state.finish} style={{ backgroundColor: 'yellow' }}>End</button>\r\n                            <button className='btnRestartFinishHint' onClick={this.getHint} disabled={!this.state.hint} style={{ backgroundColor: 'yellow' }}>Hint</button>\r\n                        </div>\r\n                        <br />\r\n                    </div>\r\n                    <div style={{ backgroundColor: 'black' }} className='col-2'>\r\n                        <br />\r\n                        {this.state.listColor.map((e, i) => <button className='changeView' id={i} value={e.background} onClick={this.selectBackgroundColor} style={{ backgroundColor: e.background }}></button>)}\r\n                        <Link to={`/${this.props.users[this.props.index].name}/games`}><button id='btnMygames' onClick={this.showGames} disabled={this.props.users[this.props.index].games.length === 0}>my games</button></Link>\r\n                        <Link to='/'><button id='btnChangeUser'>Change User</button></Link>\r\n                        <Link to='/funsudoku'><button id='btnKids'>kids</button></Link>\r\n\r\n                    </div>\r\n\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default class Login extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            userName: '',\r\n            password: '',\r\n            errorMsg: '',\r\n            movePage: '/'\r\n        }\r\n    }\r\n\r\n    //בדיקת תקינות של יוזר והאם פנוי\r\n    validUser = (e) => {\r\n        this.setState({ userName: e.target.value })\r\n    }\r\n\r\n    // בדיקת תקינות של סיסמה\r\n    validPassword = (e) => {\r\n        this.setState({ password: e.target.value });\r\n        let user = this.props.users.filter((element => element.name === this.state.userName && element.password === e.target.value));\r\n        if (user.length === 0) {\r\n            //אם היוזר אינו קיים במערכת, נשארים באותו עמוד\r\n            this.setState({ movePage: '/' });\r\n            this.setState({  errorMsg: '' })\r\n        }\r\n        else {\r\n            this.setState({ movePage: `/welcome/${this.state.userName}` })\r\n           // this.setState({ movePage: `/choose` })\r\n        }\r\n\r\n    }\r\n\r\n    //בדיקה אם משתמש קיים במערכת\r\n    checkUser = (e) => {\r\n        if (this.state.movePage === '/') {\r\n            this.setState({ errorMsg: 'user name or password is incorrect' });\r\n        }\r\n    }\r\n    /**\r\n     * \r\n     * <Link to={this.state.movePage}><button  className=\"btn btn-light\" onClick={this.checkUser} style={{ width:'100%', height:'40px', backgroundColor:'Gainsboro',borderRadius:'10px',fontSize:'18px',fontWeight:'bold' }}>Login</button></Link>\r\n\r\n     */\r\n\r\n    render() {\r\n        return (\r\n            <div className='container'>\r\n                <div className='row'>\r\n                    <div className='col-3'></div>\r\n                    <div className='col-6'>\r\n                        <div >\r\n                            <p style={{ color: 'red', fontSize:'20px'}}>{this.state.errorMsg}</p>\r\n                            <input onChange={this.validUser} style={{width:'100%', height:'40px', backgroundColor:'Gainsboro',borderRadius:'10px'}} maxLength='10' type='text' placeholder='Enter User Name' />\r\n                            <br /><br />\r\n                            <input onChange={this.validPassword} style={{ width:'100%', height:'40px', backgroundColor:'Gainsboro',borderRadius:'10px' }} maxLength='10' type='password' placeholder='Enter Password' />\r\n                            <br /><br/><br/>\r\n                            <Link to={this.state.movePage}><button id='btnLogin' onClick={this.checkUser} >Login</button></Link>\r\n\r\n                            <br/>\r\n                        </div>\r\n                    </div>\r\n                    <div className='col-3'></div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport Login from './Login.js'\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nexport default class HomePage extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className='container' style={{ backgroundColor: 'black', width: '100%', height: '700px' }}>\r\n                <div className='row'>\r\n                    <div className='col-3'></div>\r\n                    <div className='col-6'>\r\n                        <div style={{ color: 'white', textAlign: 'center' }}>\r\n                            <br /><br />\r\n                            <img style={{ width: '70%', height: '80%' }} src={`${require(`../pictures/welcome.gif`)}`}></img>\r\n                            <br />\r\n                            <br />\r\n                        </div>\r\n                    </div>\r\n                    <div style={{ width: \"100%\", top: '10%' }}>\r\n                        <div><Login users={this.props.users} /></div>\r\n                        <br />\r\n                        <Link to='/signup'><button id='moveSignup' style={{ width: '30%' }}>sign up</button></Link>\r\n                    </div>\r\n\r\n                    <div className='col-3'></div>\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default class Game extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        let users = this.props.users[this.props.index].games.sort((a, b) => a.time - b.time);\r\n        console.log(users);\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='container' style={{ backgroundColor: 'black' }}>\r\n                <div className='row'>\r\n                    <div className='col-3'></div>\r\n                    <div className='col-6'>\r\n\r\n                        {this.props.users[this.props.index].games.map((element, i) => {\r\n                            return (\r\n                                <table className='tdMyGames' style={{ color: 'gold', width: '100%' }}>\r\n                                    <tr >\r\n                                        <td className='tdMyGames'>{element.win === true ? 'win' : 'lose'}</td>\r\n                                        <td className='tdMyGames'>{element.time === 1000000 ? '--' : element.time} </td>\r\n                                        <td className='tdMyGames'><img src={i === 0 ? require('../pictures/star.gif') : ''}></img>\r\n                                        </td>\r\n                                    </tr>\r\n\r\n\r\n                                </table>\r\n                            )\r\n\r\n                        })}\r\n                        <br />\r\n                        <Link to={`/welcome/${this.props.users[this.props.index].name}`}>\r\n                            <button id=\"btnBack\" style={{ width: '50%' }}>Back</button></Link>\r\n                    </div>\r\n                    <div className='col-3'>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class TableGames extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n\r\n        let users = this.props.users.map(user => {\r\n            let bestGame = user.games.reduce((min, game) => game.time < min ? game.time : min, 1000000);\r\n            return {\r\n                ...user,\r\n                bestGame,\r\n            }\r\n        });\r\n\r\n        console.log(users);\r\n\r\n        this.state = {\r\n            top5: [...users].sort((a, b) => a.bestGame - b.bestGame).slice(0, 5),\r\n            winner: [...this.props.users].sort((a, b) => a.minTime - b.minTime).slice(0, 4).filter((e, i) => (i === 0)),\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        this.setState({ sortUsers: [...this.props.users].sort((a, b) => a.minTime - b.mintime) })\r\n    }\r\n    render() {\r\n\r\n        return (\r\n            <div className='container' style={{ backgroundColor: 'white', height: '200px', overflowY: 'scroll', border: 'black solid 5px', top: '100%' }}>\r\n                <br />\r\n                <div className='row'>\r\n                    <div className='col-3'></div>\r\n                    <div className='col-6' style={{ color: 'gold' }}>\r\n\r\n                        <table id='tbl' style={{ border: 'solid', borderCollapse: 'collapse' }}>\r\n                            <th style={{ border: 'solid' }}>USER</th>\r\n                            <th style={{ border: 'solid' }}>TIME</th>\r\n                            {this.state.top5.map((e, i) => {\r\n                                let best = this.state.top5[0].bestGame;\r\n                                let imgSrc = best == e.bestGame ? '/pictures/winner1.jpg' : '/pictures/winner2.jpg';\r\n                                return (<tr style={{ border: 'solid' }}>\r\n                                    <td >{e.name}</td>\r\n                                    <td >{e.bestGame}</td>\r\n                                    <td ><img style={{ marginLeft: '40%' }} src={imgSrc} /></td>\r\n                                </tr>)\r\n                            }\r\n                            )}\r\n                        </table>\r\n                    </div>\r\n                    <div className='col-3'></div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n","import React, { Component } from 'react'\r\nimport TimerAudio from './TimerAudio.js';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default class Kids extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            sudoku: [[\r\n                [1, 2, 3, 4],\r\n                [3, 4, 1, 2],\r\n                [2, 1, 4, 3],\r\n                [4, 3, 2, 1]],\r\n            [\r\n                [2, 3, 4, 1],\r\n                [4, 1, 3, 2],\r\n                [3, 2, 1, 4],\r\n                [1, 4, 2, 3]],\r\n            [\r\n                [2, 3, 1, 4],\r\n                [1, 4, 3, 2],\r\n                [4, 1, 2, 3],\r\n                [3, 2, 4, 1]],\r\n            [\r\n                [4, 3, 2, 1],\r\n                [2, 1, 4, 3],\r\n                [3, 4, 1, 2],\r\n                [1, 2, 3, 4]],\r\n            [\r\n                [2, 3, 4, 1],\r\n                [1, 4, 3, 2],\r\n                [3, 2, 1, 4],\r\n                [4, 1, 2, 3]\r\n            ]\r\n\r\n            ],\r\n            myGame: [[], [], [], []],\r\n            tempGame: [['', '', '', ''], ['', '', '', ''], ['', '', '', ''], ['', '', '', '']],\r\n            winGame: true,\r\n            //כדי שהתמונה תופיע רק לאחר משחק\r\n            endGame: false,\r\n            disabledBtnEnd: true,\r\n            timer: false,\r\n        }\r\n    }\r\n    showTimer = () => {\r\n        if (this.state.timer) {\r\n            return (\r\n                <TimerAudio add={this.start} />\r\n            )\r\n        }\r\n    }\r\n    start = (count) => {\r\n        this.setState({ count: count })\r\n    }\r\n    createSudoku = () => {\r\n        // 0--4\r\n        { this.clearMatrix() }\r\n        this.setState({ disabledBtnEnd: false })\r\n        let rndRow, rndCol\r\n        let chooseTable = Math.floor(Math.random() * 5);\r\n        let randMatrix = this.state.sudoku[chooseTable];\r\n        for (let i = 0; i < 4; i++) {\r\n            for (let j = 0; j < 4; j++) {\r\n                this.state.myGame[i][j] = randMatrix[i][j];\r\n            }\r\n        }\r\n        this.setState({ myGame: [...this.state.myGame] });\r\n\r\n        for (let i = 0; i < 8; i++) {\r\n            rndRow = Math.floor(Math.random() * (this.state.myGame.length));\r\n            rndCol = Math.floor(Math.random() * (this.state.myGame.length));\r\n            if (this.state.tempGame[rndRow][rndCol] === '') {\r\n                this.state.tempGame[rndRow][rndCol] = this.state.myGame[rndRow][rndCol];\r\n                document.getElementById(`t${rndRow}${rndCol}`).disabled = true;\r\n\r\n            }\r\n            else {\r\n                //* if cell not empty, repeat loop from previous i\r\n                i--;\r\n            }\r\n        }\r\n        this.setState({ tempGame: [...this.state.tempGame] })\r\n        for (let i = 0; i < 4; i++) {\r\n            for (let j = 0; j < 4; j++) {\r\n                document.getElementById(`t${i}${j}`).value = this.state.tempGame[i][j];\r\n\r\n            }\r\n        }\r\n        this.setState({ timer: true });\r\n    }\r\n    validInput = (e) => {\r\n        if (e.target.value === '0' || (e.target.value > 4 && e.target.value <= 9)) {\r\n            e.target.value = (e.target.value.slice(0, 0));\r\n        }\r\n        if (e.target.value.length > 1) {\r\n            e.target.value = (e.target.value.slice(0, 0));\r\n        }\r\n        else {\r\n\r\n            document.getElementById(`${e.target.id}`).value = e.target.value;\r\n            document.getElementById(`${e.target.id}`).style.color = \"blue\";\r\n            // הערך מהלוח נכנס לסודוקו הזמני\r\n            this.state.tempGame[e.target.id.charAt(1)][e.target.id.charAt(2)] = parseInt(e.target.value);\r\n        }\r\n    }\r\n    endGame = () => {\r\n        for (let i = 0; i < 4; i++) {\r\n            for (let j = 0; j < 4; j++) {\r\n                if (this.state.myGame[i][j] !== this.state.tempGame[i][j]) {\r\n                    this.setState({ winGame: false });\r\n                }\r\n            }\r\n        }\r\n        this.setState({ endGame: true })\r\n        this.setState({ timer: false });\r\n\r\n\r\n    }\r\n    clearMatrix = () => {\r\n        for (let i = 0; i < 4; i++) {\r\n            for (let j = 0; j < 4; j++) {\r\n                this.state.myGame[i][j] = '';\r\n                this.state.tempGame[i][j] = '';\r\n                document.getElementById(`t${i}${j}`).disabled = false;\r\n                document.getElementById(`t${i}${j}`).value = '';\r\n            }\r\n        }\r\n        this.setState({ endGame: false })\r\n    }\r\n    showFaild = () => {\r\n        if (this.state.winGame === false && this.state.endGame === true) {\r\n            return (\r\n                <div>\r\n                    <img style={{ width: '70%', marginLeft: '10%' }} src={`${require(`../pictures/crying.gif`)}`}></img>\r\n                </div>\r\n            )\r\n        }\r\n        else if (this.state.endGame === true) {\r\n            return (\r\n                <div>\r\n                    <img style={{ width: '70%', marginLeft: '10%' }} src={`${require(`../pictures/good.gif`)}`}></img>\r\n                </div>\r\n            )\r\n\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div className='container' style={{ backgroundColor: 'black' }}>\r\n                <div className='row'>\r\n                    <div className='col-1' >\r\n                        {this.showTimer()}\r\n                        <Link to='/'><button id='btnBackKids'>HOME</button></Link>\r\n                    </div>\r\n\r\n                    <div className='col-10' id='kids' style={{ backgroundImage: `url(${require(`../pictures/background.jpg`)}`, height: '700px' }}>\r\n                        <div id='divBoardKids' >\r\n                            <button id='btnStartKids' onClick={this.createSudoku} >start</button>\r\n                            <button id='btnEndKids' onClick={this.endGame} disabled={this.state.disabledBtnEnd}>end</button>\r\n                            <table>\r\n                                <tr>\r\n                                    <td><input onInput={this.validInput} className='inptNumberKids' type=\"number\" id='t00' style={{ backgroundColor: 'MintCream', color: 'Cyan' }} /></td>\r\n                                    <td><input onInput={this.validInput} className='inptNumberKids' type=\"number\" id='t01' style={{ backgroundColor: 'MintCream' }} /></td>\r\n                                    <td><input onInput={this.validInput} className='inptNumberKids' type=\"number\" id='t02' style={{ color: 'orange' }} /></td>\r\n                                    <td><input onInput={this.validInput} className='inptNumberKids' type=\"number\" id='t03' style={{ color: 'Chartreuse' }} /></td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td><input onInput={this.validInput} className='inptNumberKids' type=\"number\" id='t10' style={{ backgroundColor: 'MintCream', color: 'Cyan' }} /></td>\r\n                                    <td><input onInput={this.validInput} className='inptNumberKids' type=\"number\" id='t11' style={{ backgroundColor: 'MintCream' }} /></td>\r\n                                    <td><input onInput={this.validInput} className='inptNumberKids' type=\"number\" id='t12' style={{ color: 'Chartreuse' }} /></td>\r\n                                    <td><input onInput={this.validInput} className='inptNumberKids' type=\"number\" id='t13' style={{ color: 'orange' }} /></td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td><input onInput={this.validInput} className='inptNumberKids' type=\"number\" id='t20' style={{ color: 'orange' }} /></td>\r\n                                    <td><input onInput={this.validInput} className='inptNumberKids' type=\"number\" id='t21' style={{ color: 'Chartreuse' }} /></td>\r\n                                    <td><input onInput={this.validInput} className='inptNumberKids' type=\"number\" id='t22' style={{ backgroundColor: 'MintCream', color: 'Cyan' }} /></td>\r\n                                    <td><input onInput={this.validInput} className='inptNumberKids' type=\"number\" id='t23' style={{ backgroundColor: 'MintCream' }} /></td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td><input onInput={this.validInput} className='inptNumberKids' type=\"number\" id='t30' style={{ color: 'Chartreuse' }} /></td>\r\n                                    <td><input onInput={this.validInput} className='inptNumberKids' type=\"number\" id='t31' style={{ color: 'orange' }} /></td>\r\n                                    <td><input onInput={this.validInput} className='inptNumberKids' type=\"number\" id='t32' style={{ backgroundColor: 'MintCream', color: 'Cyan' }} /></td>\r\n                                    <td><input onInput={this.validInput} className='inptNumberKids' type=\"number\" id='t33' style={{ backgroundColor: 'MintCream' }} /></td>\r\n                                </tr>\r\n                            </table>\r\n                            <br />\r\n                            <div style={{ width: '50%' }}>\r\n                                {this.showFaild()}\r\n\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className='col-1' ></div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\nimport 'bootstrap/dist/css/bootstrap.css';\nimport Signup from './Components/Signup.js';\nimport Sudoku from './Components/Sudoku.js';\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\nimport './App.css';\nimport HomePage from './Components/HomePage.js';\nimport Game from './Components/Game.js';\nimport TableGames from './Components/TableGames.js';\nimport Kids from './Components/Kids.js';\n\nexport default class App extends Component {\n  state = {\n    users: [\n      {\n        name: \"shira\",\n        password: \"111111\",\n        games: [\n          {\n            win: true,\n            time: 7\n          },\n          {\n            win: true,\n            time: 20\n          },\n          {\n            win: true,\n            time: 6\n          },\n          {\n            win: true,\n            time: 7\n          },\n          {\n            win: true,\n            time: 4\n          },\n          {\n            win: true,\n            time: 20\n          },\n          {\n            win: true,\n            time: 15\n          },\n          {\n            win: false,\n            time: 1000000\n          }\n        ]\n      },\n      {\n        name: \"efrat\",\n        password: \"123456\",\n        games: [\n          {\n            win: true,\n            time: 6\n          },\n          {\n            win: true,\n            time: 6\n          },\n          {\n            win: true,\n            time: 6\n          }\n        ]\n      },\n    ],\n\n    backgroundColor: 'black', //default\n    board1: 'ghostwhite',\n    board2: 'lightgray',\n    count: '',\n\n  }\n\n  // run after first render!!!!\n  componentDidMount() {\n    fetch('/api/users')\n      .then(res => res.json())\n      .then(data => {\n        // todo\n        console.log(data);\n        this.setState({ users: data })\n      })\n  }\n\n\n  addUser = (name, password) => {\n    this.setState({ users: [...this.state.users, { name, password, games: [] }] });\n  }\n\n  addGame = (index, win, time, sudoku) => {\n    const user = this.state.users[index];\n    //דמכניסים לתוך המערך ורק אח\"כ מעדכנים בסט סטייט\n    this.state.users[index].games.push({ win, time, sudoku });\n    this.setState({ users: [...this.state.users] });\n    fetch('/api/users/addGame', {\n      method: \"POST\", body: JSON.stringify({ userName: user.name, game: { win, time, sudoku } }), headers: {\n        'Content-Type': 'application/json'\n      }\n    })\n      .then(res => res.json())\n      .then(data => {\n        // todo\n        console.log(data);\n      })\n  }\n  //שינוי צבעי תצוגה\n  changeBackgroundColor = (backgroundColor, board1, board2) => {\n    this.setState({ backgroundColor, board1, board2 })\n  }\n  updateTime = (count) => {\n    this.setState({ count: count })\n  }\n\n  render() {\n    return (\n      <div>\n        <div>\n        </div>\n        <Router>\n          <Switch>\n            <Route exact path='/' component={() => { return <HomePage style={this.state.style} users={this.state.users} /> }} />\n            <Route exact path='/signup' component={() => { return <Signup users={this.state.users} add={this.addUser} /> }} />\n            {/**לולאה שרצה על המערך ומחזירה לנו משתמשים שנוכל ליצור מהם ערוצים שונים */\n              this.state.users.map((e, i) => {\n                return (\n                  <Route exact path={`/welcome/${e.name}`} component={() => { return <div><Sudoku index={i} addGame={this.addGame} changeBackgroundColor={this.changeBackgroundColor} backgroundColor={this.state.backgroundColor} board1={this.state.board1} board2={this.state.board2} users={this.state.users} /><TableGames users={this.state.users} /></div> }} />\n                )\n              })\n            }\n            {\n              this.state.users.map((e, i) => {\n                return (\n                  <Route exact path={`/${e.name}/games`} component={() => { return <div><Game index={i} users={this.state.users} /></div> }} />\n                )\n              })\n            }\n            {/**לולאה שרצה על המערך ומחזירה לנו משתמשים שנוכל ליצור מהם ערוצים שונים */\n              this.state.users.map((e, i) => {\n                return (\n                  <Route exact path={`/funsudoku`} component={() => { return <Kids index={i} /> }} />\n                )\n              })\n            }\n          </Switch>\n        </Router>\n      </div>\n    )\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}